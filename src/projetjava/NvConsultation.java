/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetjava;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import static projetjava.InterfacePremiere.LSTDossMed;
import static projetjava.InterfacePremiere.consa;
import static projetjava.InterfacePremiere.pesca;

/**
 *
 * @author WissemPC
 */
public class NvConsultation extends javax.swing.JInternalFrame {

    /**
     * Creates new form NvConsultation
     */
    public NvConsultation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DiagC = new javax.swing.JTextArea();
        ErrDateCons = new javax.swing.JLabel();
        ErrDiagnostic = new javax.swing.JLabel();
        Valider = new javax.swing.JButton();
        Vider = new javax.swing.JButton();
        Quitter = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        RefC = new javax.swing.JTextField();
        ErrRefCon = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JDC = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        MDC = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        ADC = new javax.swing.JComboBox<>();
        NomMedPres = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        SpecialitePres = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        RadAnal = new javax.swing.JComboBox<>();
        IntAnal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PosoPresc = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        NomPresc = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ErrNomPres = new javax.swing.JLabel();
        Errpos = new javax.swing.JLabel();
        ErrInt = new javax.swing.JLabel();
        ErrAct = new javax.swing.JLabel();
        ErrSpec = new javax.swing.JLabel();
        ErrMed = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nouvelle Consultation");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Date du Consultation*");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 62, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Diagnostic*");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 102, -1, -1));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        DiagC.setColumns(20);
        DiagC.setRows(5);
        jScrollPane1.setViewportView(DiagC);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        ErrDateCons.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrDateCons, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 514, 22));

        ErrDiagnostic.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrDiagnostic, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 337, 23));

        Valider.setText("Valider");
        Valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValiderActionPerformed(evt);
            }
        });
        getContentPane().add(Valider, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 555, -1, -1));

        Vider.setText("Vider");
        Vider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViderActionPerformed(evt);
            }
        });
        getContentPane().add(Vider, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 555, 79, -1));

        Quitter.setText("Quitter");
        Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitterActionPerformed(evt);
            }
        });
        getContentPane().add(Quitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 555, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Reference du dossier du Patient*");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 20, -1, -1));
        getContentPane().add(RefC, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 100, -1));

        ErrRefCon.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrRefCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 23, 411, 16));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("*Obligatoire");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, -1, -1));

        JDC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jour", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(JDC, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        jLabel5.setText("/");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, -1));

        MDC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mois", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        MDC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MDCActionPerformed(evt);
            }
        });
        getContentPane().add(MDC, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, -1));

        jLabel6.setText("/");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        ADC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Annee", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        getContentPane().add(ADC, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, -1, -1));
        getContentPane().add(NomMedPres, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 483, 100, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("Nom du Medecin*");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 486, -1, -1));
        getContentPane().add(SpecialitePres, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 447, 100, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Specialite Requise*");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 453, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("EnvoiVersSpecialiste");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 423, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setText("Acte Radio*");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 390, -1, -1));

        RadAnal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Radio", "IRM", "Scanner", "Autre" }));
        getContentPane().add(RadAnal, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 387, 100, -1));
        getContentPane().add(IntAnal, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 352, 100, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("Intitul√©*");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 355, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Analyse");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 319, -1, -1));
        getContentPane().add(PosoPresc, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 286, 100, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("Posologie*");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 289, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel14.setText("Nom*");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        NomPresc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomPrescActionPerformed(evt);
            }
        });
        getContentPane().add(NomPresc, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 257, 100, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Medicament");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 235, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("PRESCRIPTION :");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 211, -1, -1));

        ErrNomPres.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrNomPres, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 257, -1, -1));

        Errpos.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(Errpos, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 286, -1, -1));

        ErrInt.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 352, -1, -1));

        ErrAct.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrAct, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 387, -1, -1));

        ErrSpec.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrSpec, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 447, -1, -1));

        ErrMed.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(ErrMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 483, -1, -1));
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(-120, 0, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetjava/A.png"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
public boolean inftr (int in)
{
    if (in==4 || in==6 || in==9 || in==11 || in==2)             //retourne vrai s'il s'agit d'un mois ayant un nombre de jours inferieur a 31 
        return true ;
    else return false ;
}
    private void ViderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViderActionPerformed
RefC.setText("");
 DiagC.setText("");         //Vider Tout les champs

  NomPresc.setText("");
 NomMedPres.setText("");
 PosoPresc.setText("");
 IntAnal.setText("");
 RadAnal.setSelectedIndex(0);
 SpecialitePres.setText("");
 
  JDC.setSelectedIndex(0);
  MDC.setSelectedIndex(0);
  ADC.setSelectedIndex(0);        
    }//GEN-LAST:event_ViderActionPerformed


    private void ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderActionPerformed
int vid=0;
        boolean empty =false ;
       int nbch=0 ;                 
       if(("".equals(NomPresc.getText())) && ("".equals(PosoPresc.getText())) || (("".equals(NomPresc.getText())) || ("".equals(PosoPresc.getText()) )))    //Verifier si au moins une section des champs est remplie ou non
           nbch++;
       if (("".equals(IntAnal.getText())) && (RadAnal.getSelectedIndex()==0) || (("".equals(IntAnal.getText())) || (RadAnal.getSelectedIndex()==0)) )
           nbch++;
       if (("".equals(SpecialitePres.getText())) && ("".equals(NomMedPres.getText())) || (("".equals(SpecialitePres.getText())) || ("".equals(NomMedPres.getText()))))
           nbch++;
       //nbch represente le nombre de sections qui sont vides (Medicament, Analyse et Envoi Vers Specialiste ...)
       if (nbch==3)
       { ErrNomPres.setText("veuillez au moins remplir MEDICAMENT , ANALYSE , OU ENVOI VERS SPECILAISTE");}
          
            
                                                                //Si aucune section n'est remplie une erreur apparait
        else                                                    //Sinon (Au moins une section est remplie) empty =true ;
     
        {    ErrNomPres.setText("");
                empty=true;}
      
      if (empty==false)
          vid++;

        if (DiagC.getText().equals(""))                     //Controle de saisie sur le diagnostic (ne doit pas etre vide)
        { ErrDiagnostic.setText("diagnostic erronn√©");
        }
        else 
        {ErrDiagnostic.setText("");
        empty=true;}
        if (!empty)
            vid++;
      if(RefC.getText().equals(""))                     //Controle Sur la reference (doit etre non vide et avoir 4 caracteres)
        {
            ErrRefCon.setText("saisir Reference");
          
            
        }
        else
         if ((RefC.getText()).length() != 4)  
            ErrRefCon.setText("Reference Doit avoir 4 caracteres ");
        else 
                                                                                                    
             if (LSTDossMed.containsKey(RefC.getText())==false) 
            
            ErrRefCon.setText("Il n'y a pas de dossier m√©dicale pour cette reference   ");
        else
        {    ErrRefCon.setText("");
                empty=true;}
      if (!empty)
           vid++;
      
           if ((JDC.getSelectedIndex()==0) || (MDC.getSelectedIndex()==0) || (ADC.getSelectedIndex()==0))       //Controle Sur Date (ne doit pas etre Vide et doit etre existant et pas comme 30 fevrier par exemple) 
        {   ErrDateCons.setText("Choisir Date");
            empty=false;
    }
       
       else 
            if (inftr(ADC.getSelectedIndex())==true)
            {
            if (MDC.getSelectedIndex()==2)
                { if (JDC.getSelectedIndex()>29)
                        ErrDateCons.setText("Choisir jour inferieur a 29 ou mois different"); 

empty=false;//erreur
                }
            else
            {        if (JDC.getSelectedIndex()>30)
                         ErrDateCons.setText("Choisir jour inferieur a 31 ou mois different ");
                    
                    empty=false;
               }}
       else
       {ErrDateCons.setText("");
       empty=true;}
           
       if (!empty)
           vid++;
       //s'il y'a un erreur dans un champ (vid (initialement 0) incremente de 1 pour chaque champ non regle)
      if (vid==0){          //Si tout est bon
          ArrayList <Prescription> pr = new ArrayList() ;
          Prescription p = new Prescription() ;     //Declaration de differents structures
            int j=0; 
        DossierMedical DM= new DossierMedical();
        ArrayList <Consultation> TC = new ArrayList() ;
         Consultation cc=new Consultation () ;
        int k=0; int x=0 ; String refa ;
        boolean tr=false;
        String [] refA = new String [50] ; 
        refA[x]=RefC.getText();  //refA est un tableau de references et on met dedans la premiere reference
        int l=0;
        boolean maw=false;
         while( (k<consa.size()) && (tr==false)) 
    if ( (consa.get(k).getADC()==ADC.getSelectedIndex()+1919)  && (consa.get(k).getMDC()==MDC.getSelectedIndex()) && (consa.get(k).getJDC()==JDC.getSelectedIndex())  ) //Chercher si la consultation existe ou pas selon date
        tr=true;
    else k++;
         while((l<refA.length) && (maw==false))
         {if(refA[l].equals(RefC.getText())) //Si la reference deja existe 
                 maw=true;                      //maw devient vrai
             else l++;}
         
         if (!maw)      //la reference n'existe pas (on a change de reference)
             x++;       //x initialement 0 devient 1
        
    
             if (tr)  //La Consultation existe deja (meme date)
             {p.setNomMedc(NomPresc.getText());
            p.setPos(PosoPresc.getText());
            
            p.setAnalyse(IntAnal.getText());
            p.setActe((String)RadAnal.getSelectedItem());
            
            p.setSpereq(SpecialitePres.getText());
            p.setNomMed(NomMedPres.getText());
            //une prescription p recoit les champs texts de prescriptions
            consa.get(k).ajtPres(p); //on cherche cette consultation et on lui ajoute cette prescription
             } else
            {cc.setJDC(JDC.getSelectedIndex()); //Sinon on fait  une nouvelle consultation 
          cc.setMDC(MDC.getSelectedIndex());
          cc.setADC(ADC.getSelectedIndex()+1919);
          cc.setDia(DiagC.getText());
          p.setNomMedc(NomPresc.getText());
            p.setPos(PosoPresc.getText());
            
            p.setAnalyse(IntAnal.getText());
            p.setActe((String)RadAnal.getSelectedItem());
            
            p.setSpereq(SpecialitePres.getText());
            p.setNomMed(NomMedPres.getText());
          pr.add(p) ; //on fait une nouvelle prescription et on lui ajoute a une liste de prescription et on lui ajoute a la nouvelle consultation
          cc.setPres(pr);
          consa.add(cc);}       //la liste publique recoit la nouvelle consultation
      
      DM=LSTDossMed.get(RefC.getText()) ;  //on recupere le dossier selon la reference
      DM.setCon(consa); //on lui set la liste du consultation en liste publique consa
      LSTDossMed.put(RefC.getText(), DM) ;  //mettre le nouveau dossier medical (qui est copie de l'ancien mais avec la nouvelle liste de consultation) avec la meme reference pour l'ecraser
     if (x>0)      // (Si x==1) c'est a dire qu'on a change de reference et alors du patient
     {consa.clear();    //la liste publique de consultation est vid√©
     x=0;               
     }
    JOptionPane.showMessageDialog(null, "Ajout Succes" ,"Consultation Ajoute", 1);
    //  j++;
     }
    }//GEN-LAST:event_ValiderActionPerformed

    private void MDCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MDCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MDCActionPerformed

    private void NomPrescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomPrescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomPrescActionPerformed

    private void QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitterActionPerformed
setDefaultCloseOperation(NvConsultation.DISPOSE_ON_CLOSE);          //Quitter
setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_QuitterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ADC;
    private javax.swing.JTextArea DiagC;
    private javax.swing.JLabel ErrAct;
    private javax.swing.JLabel ErrDateCons;
    private javax.swing.JLabel ErrDiagnostic;
    private javax.swing.JLabel ErrInt;
    private javax.swing.JLabel ErrMed;
    private javax.swing.JLabel ErrNomPres;
    private javax.swing.JLabel ErrRefCon;
    private javax.swing.JLabel ErrSpec;
    private javax.swing.JLabel Errpos;
    private javax.swing.JTextField IntAnal;
    private javax.swing.JComboBox<String> JDC;
    private javax.swing.JComboBox<String> MDC;
    private javax.swing.JTextField NomMedPres;
    private javax.swing.JTextField NomPresc;
    private javax.swing.JTextField PosoPresc;
    private javax.swing.JButton Quitter;
    private javax.swing.JComboBox<String> RadAnal;
    private javax.swing.JTextField RefC;
    private javax.swing.JTextField SpecialitePres;
    private javax.swing.JButton Valider;
    private javax.swing.JButton Vider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
